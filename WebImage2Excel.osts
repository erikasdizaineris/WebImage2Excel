{"version":"0.2.0","body":"/* Script by Erikas Vasiljevas\nUssage: \n*place web image links in A column (currently set up to 500 entries).\n*Run the script so it adds images to corresponding fields.\n*You only can use images from HTTPS web servers.\n */\nasync function main(workbook: ExcelScript.Workbook) {\n    let selectedSheet = workbook.getActiveWorksheet();\n    // Get the values of the used range.\n    let range = selectedSheet.getRange(\"A1:A500\");\n    let rangeValues = range.getValues();\n    // Iterate over the first and second columns and set their values to their absolute value.\n    let rowCount = range.getRowCount();\n  for (let i = 0; i < rowCount; i++) {\n    // The column at index 0 is column \"1\" in the worksheet.\n    if (rangeValues[i][0] != 0) {\n      let hyperlink = (rangeValues[i][0] as string);\n      selectedSheet.getCell(i, 0).getText();\n      let cellwrite = selectedSheet.getCell(i,0);\n      // Get the image from a path.\n      let link = hyperlink;\n      // Fetch the image from a URL if possible.\n      try {\n        let response = await fetch(link);\n\n        // Store the response as an ArrayBuffer, since it is a raw image file.\n        const data = await response.arrayBuffer();\n\n        // Convert the image data into a base64-encoded string.\n        const image = convertToBase64(data);\n\n        // Add the image to a worksheet.\n        let image1 = selectedSheet.addImage(image);\n        //lock image to the cell\n        image1.setPlacement(ExcelScript.Placement.twoCell);\n        //gets cell\n\n        //cell dimensions\n\n        const dimensionsx = cellwrite.getWidth();\n        const dimensionsy = cellwrite.getHeight();\n\n        // Set the image size.\n        image1.setHeight(dimensionsy);\n        image1.setWidth(dimensionsx);\n\n        //calculate coordinates\n\n        const x = cellwrite.getLeft();\n        const y = cellwrite.getTop();\n\n        // Position the image at [100,100] pixels.\n        image1.setLeft(x);\n        image1.setTop(y);\n      } \n      catch (error) {\n        // TypeError: Failed to fetch\n        let image1 = selectedSheet.addImage(\"https://www.erikasvasiljevas.com/erikas.png\");\n            //cell dimensions\n        const dimensionsx = cellwrite.getWidth();\n        const dimensionsy = cellwrite.getHeight();\n        // Set the image size.\n        image1.setHeight(dimensionsy);\n        image1.setWidth(dimensionsx);\n\n        //calculate coordinates\n\n        const x = cellwrite.getLeft();\n        const y = cellwrite.getTop();\n\n        // Position the image at [100,100] pixels.\n        image1.setLeft(x);\n        image1.setTop(y);\n        //lock image to the cell\n        image1.setPlacement(ExcelScript.Placement.twoCell);\n      }\n    }  \n  }    \n    /**\n * Converts an ArrayBuffer containing a .png image into a base64-encoded string.\n */\n    function convertToBase64(input: ArrayBuffer) {\n      let uInt8Array = new Uint8Array(input);\n      let count = uInt8Array.length;\n\n      // Allocate the necessary space up front.\n      let charCodeArray = new Array(count) as string[];\n\n      // Convert every entry in the array to a character.\n      for (let i = count; i >= 0; i--) {\n        charCodeArray[i] = String.fromCharCode(uInt8Array[i]);\n      }\n\n      // Convert the characters to base64.\n      let base64 = btoa(charCodeArray.join(''));\n      return base64;\n  }\n  }","description":"","parameterInfo":"{\"originalParameterOrder\":[],\"parameterSchema\":{\"type\":\"object\",\"default\":{},\"x-ms-visibility\":\"internal\"},\"returnSchema\":{\"type\":\"object\",\"properties\":{}}}","apiInfo":"{\"variant\":\"synchronous\",\"variantVersion\":2}"}